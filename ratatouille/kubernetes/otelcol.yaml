apiVersion: v1
kind: Namespace
metadata:
  name: observability
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otelcol
rules:
- apiGroups:
  - ""
  resources:
  - events
  - namespaces
  - namespaces/status
  - nodes
  - nodes/spec
  - pods
  - pods/status
  - replicationcontrollers
  - replicationcontrollers/status
  - resourcequotas
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - autoscaling
  resources:
    - horizontalpodautoscalers
  verbs:
    - get
    - list
    - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: otelcol-k8s
  namespace: observability
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otelcol
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: otelcol
subjects:
- kind: ServiceAccount
  name: otelcol-k8s
  namespace: observability
---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otelcol-k8s
  namespace: observability
spec:
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.113.0
  serviceAccount: otelcol-k8s
  envFrom:
    - secretRef:
        name: grafana-cloud-credentials
  config:
    extensions:
      basicauth:
        client_auth:
          username: "${env:GRAFANA_CLOUD_USER}"
          password: "${env:GRAFANA_CLOUD_TOKEN}"
    receivers:
      k8s_events: {}
      k8s_cluster:
        collection_interval: 15s
    exporters:
      otlphttp:
        endpoint: https://otlp-gateway-prod-eu-west-2.grafana.net/otlp
        auth:
          authenticator: basicauth

    service:
      extensions: [ basicauth ]
      pipelines:
        metrics:
          receivers: [ k8s_cluster ]
          exporters: [ otlphttp    ]
        logs:
          receivers: [ k8s_events ]
          exporters: [ otlphttp   ]
---
